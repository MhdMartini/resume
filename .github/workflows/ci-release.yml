name: ci-release
description: Release.

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
      dry-run:
        description: 'Perform a dry run?'
        type: boolean
        required: false
        default: false

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml

      - name: Update version in pyproject.toml
        shell: python
        run: |
          import toml
          from datetime import date

          # Load pyproject.toml
          pyproject_path = 'pyproject.toml'
          today = date.today()
          new_version = f'{today.year}.{today.month}.{today.day}'

          # Update the version field
          with open(pyproject_path, 'r') as f:
              pyproject = toml.load(f)

          pyproject['project']['version'] = new_version

          # Write the updated pyproject.toml back
          with open(pyproject_path, 'w') as f:
              toml.dump(pyproject, f)

          print(f'Updated version to {new_version} in pyproject.toml')

      - name: Publish release
        if: inputs.dry-run == false
        run: |
          echo "Publishing release with version ${{ inputs.version }}"          
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          if [[ -n "$(git status --porcelain pyproject.toml)" ]]; then
            git add pyproject.toml
            git commit -m "Bump version: ${{ inputs.version }}"
            git push origin main
          else
            echo "No changes detected in pyproject.toml, skipping commit."
          fi
